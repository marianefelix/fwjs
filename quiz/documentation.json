{
    "pipes": [],
    "interfaces": [
        {
            "name": "CustomButton",
            "id": "interface-CustomButton-4bd5f65babe294db5f7aeb1b89fb5e877c6ae367efb313fcb03bb6178d6730fd1b4f1e77c728b712a9cce8bf39a249b96d6ef825e49900ecdfaa0753bfbfc720",
            "file": "src/app/components/CustomButton/custom-button.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from \"@angular/core\";\r\n\r\nexport interface CustomButton {\r\n  title: string;\r\n  selected: boolean;\r\n  index: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-custom-button',\r\n  templateUrl: './custom-button.component.html',\r\n  styleUrls: ['./custom-button.component.css'] \r\n})\r\n\r\nexport class CustomButtonComponent {\r\n  @Input() title!: string;\r\n  @Input() selected!: boolean;\r\n  @Input() index!: number;\r\n\r\n  @Output() onClick = new EventEmitter<number>();\r\n}",
            "properties": [
                {
                    "name": "index",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "selected",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "TabListType",
            "id": "interface-TabListType-8552dfd982ef13aa711806e312338e667ac01c3b6771edac1aedd15216429d6d7593c909d7bf42b2c15510934f600f8a29f49b44a9058cf5e52d4e344fe013e6",
            "file": "src/app/components/Tab/tab.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Input } from \"@angular/core\";\r\n\r\nexport interface TabListType {\r\n    title: string;\r\n    description: string;\r\n}\r\n\r\nexport interface TabProps {\r\n    data: TabListType[];\r\n}\r\n\r\n@Component({\r\n  selector: 'app-tab',\r\n  templateUrl: './tab.component.html',\r\n  styleUrls: ['./tab.component.css'] \r\n})\r\n\r\nexport class TabComponent {\r\n  @Input() data!: TabListType[];\r\n    \r\n    currentlySelectedTab = 0;\r\n    \r\n\r\n    tabOnClick = (tabIndex: number) => {\r\n        this.currentlySelectedTab = tabIndex;\r\n    };\r\n\r\n    isTabSelected = (tabIndex: number) => {\r\n        if (tabIndex === this.currentlySelectedTab) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n}",
            "properties": [
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "TabProps",
            "id": "interface-TabProps-8552dfd982ef13aa711806e312338e667ac01c3b6771edac1aedd15216429d6d7593c909d7bf42b2c15510934f600f8a29f49b44a9058cf5e52d4e344fe013e6",
            "file": "src/app/components/Tab/tab.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Input } from \"@angular/core\";\r\n\r\nexport interface TabListType {\r\n    title: string;\r\n    description: string;\r\n}\r\n\r\nexport interface TabProps {\r\n    data: TabListType[];\r\n}\r\n\r\n@Component({\r\n  selector: 'app-tab',\r\n  templateUrl: './tab.component.html',\r\n  styleUrls: ['./tab.component.css'] \r\n})\r\n\r\nexport class TabComponent {\r\n  @Input() data!: TabListType[];\r\n    \r\n    currentlySelectedTab = 0;\r\n    \r\n\r\n    tabOnClick = (tabIndex: number) => {\r\n        this.currentlySelectedTab = tabIndex;\r\n    };\r\n\r\n    isTabSelected = (tabIndex: number) => {\r\n        if (tabIndex === this.currentlySelectedTab) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n}",
            "properties": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TabListType[]",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-1aed31ac8ddb8bcddba25baea8a376fa1b92beab417c4472a8a6ad7e92a259ce8a245a575448b82761f36c7f2c8edd8396678e460955459b7c364b45f75e0c22",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "template": "<app-tab [data]=\"tabList\"></app-tab>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "tabList",
                    "defaultValue": "[\r\n        {\r\n            \"title\": \"Tab 1\",\r\n            \"description\": \"Texto 1\",\r\n        },\r\n        {\r\n            \"title\": \"Tab 2\",\r\n            \"description\": \"Texto 2\",\r\n        },\r\n        {\r\n            \"title\": \"Tab 3\",\r\n            \"description\": \"Texto 3\",\r\n        },\r\n        {\r\n            \"title\": \"Tab 4\",\r\n            \"description\": \"Texto 4\",\r\n        },\r\n    ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TabListType[]",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "title",
                    "defaultValue": "'quiz'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { TabListType } from './components/Tab/tab.component';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  template: `\r\n    <app-tab [data]=\"tabList\"></app-tab>\r\n    `,\r\n})\r\n\r\nexport class AppComponent {\r\n  title = 'quiz';\r\n\r\n    tabList: TabListType[]  = [\r\n        {\r\n            \"title\": \"Tab 1\",\r\n            \"description\": \"Texto 1\",\r\n        },\r\n        {\r\n            \"title\": \"Tab 2\",\r\n            \"description\": \"Texto 2\",\r\n        },\r\n        {\r\n            \"title\": \"Tab 3\",\r\n            \"description\": \"Texto 3\",\r\n        },\r\n        {\r\n            \"title\": \"Tab 4\",\r\n            \"description\": \"Texto 4\",\r\n        },\r\n    ];\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "CustomButtonComponent",
            "id": "component-CustomButtonComponent-4bd5f65babe294db5f7aeb1b89fb5e877c6ae367efb313fcb03bb6178d6730fd1b4f1e77c728b712a9cce8bf39a249b96d6ef825e49900ecdfaa0753bfbfc720",
            "file": "src/app/components/CustomButton/custom-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-custom-button",
            "styleUrls": [
                "./custom-button.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./custom-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "index",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "selected",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from \"@angular/core\";\r\n\r\nexport interface CustomButton {\r\n  title: string;\r\n  selected: boolean;\r\n  index: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-custom-button',\r\n  templateUrl: './custom-button.component.html',\r\n  styleUrls: ['./custom-button.component.css'] \r\n})\r\n\r\nexport class CustomButtonComponent {\r\n  @Input() title!: string;\r\n  @Input() selected!: boolean;\r\n  @Input() index!: number;\r\n\r\n  @Output() onClick = new EventEmitter<number>();\r\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "button {\r\n    width: 7rem;\r\n    padding: 0.5rem 0;\r\n\r\n    background-color: #cccccc;\r\n    border: 1px solid #777777;\r\n    border-radius: 3px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 300;\r\n\r\n    cursor: pointer;\r\n}\r\n\r\nbutton.selected, button:hover {\r\n    background-color: #aaaaaa;\r\n\r\n    font-weight: bold;\r\n}",
                    "styleUrl": "./custom-button.component.css"
                }
            ],
            "stylesData": "",
            "templateData": "<button\r\n    type=\"button\"\r\n    [class]=\"selected ? 'selected' : ''\"\r\n    [title]=\"title\"\r\n    (click)=\"onClick.emit(index)\"\r\n>\r\n    {{ title }}\r\n</button>"
        },
        {
            "name": "EnunciationComponent",
            "id": "component-EnunciationComponent-015b4efea64a86009fb0b1850f3374244952c8c5610826a00ad28d978b1728de2daef0976d15fd2fe4de55f07a290fce59613ae21e66120db1ffb84261475c33",
            "file": "src/app/components/Enunciation/enunciation.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-enunciation",
            "styleUrls": [
                "./enunciation.component.css"
            ],
            "styles": [],
            "template": "<div class=\"description-container\">\n  <h2 class=\"enunciation-text\">\n    <ng-content></ng-content>\n  </h2>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: 'app-enunciation',\r\n  template: `\r\n  <div class=\"description-container\">\r\n    <h2 class=\"enunciation-text\">\r\n      <ng-content></ng-content>\r\n    </h2>\r\n  </div>\r\n  `,\r\n  styleUrls: ['./enunciation.component.css'] \r\n})\r\n\r\nexport class EnunciationComponent {}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n    min-width: 78%;\r\n    height: 5.5rem;\r\n    padding: 1.5rem;\r\n    \r\n    background-color: #f0f0f0;\r\n    border-radius: 10px;\r\n    border: 1px solid #aaaaaa;\r\n\r\n    grid-column: 1 / -1;\r\n}\r\n\r\n.enunciation-text {\r\n    margin: 0;\r\n\r\n    font-weight: 400;\r\n}",
                    "styleUrl": "./enunciation.component.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "TabComponent",
            "id": "component-TabComponent-8552dfd982ef13aa711806e312338e667ac01c3b6771edac1aedd15216429d6d7593c909d7bf42b2c15510934f600f8a29f49b44a9058cf5e52d4e344fe013e6",
            "file": "src/app/components/Tab/tab.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-tab",
            "styleUrls": [
                "./tab.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./tab.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "TabListType[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "currentlySelectedTab",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "isTabSelected",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "tabOnClick",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from \"@angular/core\";\r\n\r\nexport interface TabListType {\r\n    title: string;\r\n    description: string;\r\n}\r\n\r\nexport interface TabProps {\r\n    data: TabListType[];\r\n}\r\n\r\n@Component({\r\n  selector: 'app-tab',\r\n  templateUrl: './tab.component.html',\r\n  styleUrls: ['./tab.component.css'] \r\n})\r\n\r\nexport class TabComponent {\r\n  @Input() data!: TabListType[];\r\n    \r\n    currentlySelectedTab = 0;\r\n    \r\n\r\n    tabOnClick = (tabIndex: number) => {\r\n        this.currentlySelectedTab = tabIndex;\r\n    };\r\n\r\n    isTabSelected = (tabIndex: number) => {\r\n        if (tabIndex === this.currentlySelectedTab) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".tab-container {\r\n    display: grid;\r\n    grid-template-columns: repeat(4, 1fr);\r\n    gap: 1rem;\r\n}\r\n\r\n.tab-container div:last-child {\r\n    grid-column: 1 / -1;\r\n}",
                    "styleUrl": "./tab.component.css"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"tab-container\">\r\n  <app-custom-button *ngFor=\"let tabItem of data; let newIndex = index\"\r\n    [title]=\"tabItem.title\"\r\n    [selected]=\"isTabSelected(newIndex)\"\r\n    [index]=\"newIndex\"\r\n    (onClick)=\"tabOnClick(newIndex)\"\r\n  >\r\n  </app-custom-button>\r\n    <app-enunciation>\r\n      {{ data[currentlySelectedTab].description }}\r\n    </app-enunciation>\r\n</div>"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-664b3f9b9bbf21170bd999589b8fc010228a51e67363fa796a880c862323ab4aa7d89933f20227e1c416154f31b9a43f13432c4bf8532398c24298abbf11e55a",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { CustomButtonComponent } from './components/CustomButton/custom-button.component';\r\nimport { EnunciationComponent } from './components/Enunciation/enunciation.component';\r\nimport { TabComponent } from './components/Tab/tab.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    CustomButtonComponent,\r\n    EnunciationComponent,\r\n    TabComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\n\r\nexport class AppModule { }",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "CustomButtonComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "ButtonComponent",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/CustomButton.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n    props: args,\r\n})"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "EnunciationComponent",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Enunciation.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n    template: `\r\n    <app-enunciation>\r\n        Enunciado\r\n    </app-enunciation>`\r\n})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: false\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: true\r\n}"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "TabComponent",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Tab.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n    props: args,\r\n})"
            },
            {
                "name": "tabList",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Tab.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n    {\r\n        \"title\": \"Tab 1\",\r\n        \"description\": \"Texto 1\",\r\n    },\r\n    {\r\n        \"title\": \"Tab 2\",\r\n        \"description\": \"Texto 2\",\r\n    },\r\n    {\r\n        \"title\": \"Tab 3\",\r\n        \"description\": \"Texto 3\",\r\n    },\r\n    {\r\n        \"title\": \"Tab 4\",\r\n        \"description\": \"Texto 4\",\r\n    },\r\n]"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/stories/CustomButton.stories.ts": [
                {
                    "name": "ButtonComponent",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/CustomButton.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n    props: args,\r\n})"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/stories/Enunciation.stories.ts": [
                {
                    "name": "EnunciationComponent",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Enunciation.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n    template: `\r\n    <app-enunciation>\r\n        Enunciado\r\n    </app-enunciation>`\r\n})"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: false\r\n}"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: true\r\n}"
                }
            ],
            "src/stories/Tab.stories.ts": [
                {
                    "name": "TabComponent",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Tab.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n    props: args,\r\n})"
                },
                {
                    "name": "tabList",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Tab.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n    {\r\n        \"title\": \"Tab 1\",\r\n        \"description\": \"Texto 1\",\r\n    },\r\n    {\r\n        \"title\": \"Tab 2\",\r\n        \"description\": \"Texto 2\",\r\n    },\r\n    {\r\n        \"title\": \"Tab 3\",\r\n        \"description\": \"Texto 3\",\r\n    },\r\n    {\r\n        \"title\": \"Tab 4\",\r\n        \"description\": \"Texto 4\",\r\n    },\r\n]"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/CustomButton/custom-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CustomButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/CustomButton/custom-button.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CustomButton",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Enunciation/enunciation.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EnunciationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Tab/tab.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TabComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Tab/tab.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TabListType",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/Tab/tab.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TabProps",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/CustomButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Enunciation.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EnunciationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Tab.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TabComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Tab.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "tabList",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}